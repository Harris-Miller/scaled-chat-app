/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileIndexRouteImport } from './routes/profile.index'
import { Route as RoomsRoomIdRouteImport } from './routes/rooms.$roomId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomsRoomIdRoute = RoomsRoomIdRouteImport.update({
  id: '/rooms/$roomId',
  path: '/rooms/$roomId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/rooms/$roomId': typeof RoomsRoomIdRoute
  '/profile': typeof ProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/rooms/$roomId': typeof RoomsRoomIdRoute
  '/profile': typeof ProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/rooms/$roomId': typeof RoomsRoomIdRoute
  '/profile/': typeof ProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/rooms/$roomId' | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/rooms/$roomId' | '/profile'
  id: '__root__' | '/' | '/rooms/$roomId' | '/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RoomsRoomIdRoute: typeof RoomsRoomIdRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rooms/$roomId': {
      id: '/rooms/$roomId'
      path: '/rooms/$roomId'
      fullPath: '/rooms/$roomId'
      preLoaderRoute: typeof RoomsRoomIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RoomsRoomIdRoute: RoomsRoomIdRoute,
  ProfileIndexRoute: ProfileIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
