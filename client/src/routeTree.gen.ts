/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RoomsRouteImport } from './routes/rooms'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RoomsIndexRouteImport } from './routes/rooms.index'
import { Route as ProfileIndexRouteImport } from './routes/profile.index'
import { Route as RoomsRoomIdRouteImport } from './routes/rooms.$roomId'

const RoomsRoute = RoomsRouteImport.update({
  id: '/rooms',
  path: '/rooms',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomsIndexRoute = RoomsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RoomsRoute,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const RoomsRoomIdRoute = RoomsRoomIdRouteImport.update({
  id: '/$roomId',
  path: '/$roomId',
  getParentRoute: () => RoomsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/rooms': typeof RoomsRouteWithChildren
  '/rooms/$roomId': typeof RoomsRoomIdRoute
  '/profile': typeof ProfileIndexRoute
  '/rooms/': typeof RoomsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/rooms/$roomId': typeof RoomsRoomIdRoute
  '/profile': typeof ProfileIndexRoute
  '/rooms': typeof RoomsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/rooms': typeof RoomsRouteWithChildren
  '/rooms/$roomId': typeof RoomsRoomIdRoute
  '/profile/': typeof ProfileIndexRoute
  '/rooms/': typeof RoomsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/rooms' | '/rooms/$roomId' | '/profile' | '/rooms/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/rooms/$roomId' | '/profile' | '/rooms'
  id: '__root__' | '/' | '/rooms' | '/rooms/$roomId' | '/profile/' | '/rooms/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RoomsRoute: typeof RoomsRouteWithChildren
  ProfileIndexRoute: typeof ProfileIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/rooms': {
      id: '/rooms'
      path: '/rooms'
      fullPath: '/rooms'
      preLoaderRoute: typeof RoomsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rooms/': {
      id: '/rooms/'
      path: '/'
      fullPath: '/rooms/'
      preLoaderRoute: typeof RoomsIndexRouteImport
      parentRoute: typeof RoomsRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rooms/$roomId': {
      id: '/rooms/$roomId'
      path: '/$roomId'
      fullPath: '/rooms/$roomId'
      preLoaderRoute: typeof RoomsRoomIdRouteImport
      parentRoute: typeof RoomsRoute
    }
  }
}

interface RoomsRouteChildren {
  RoomsRoomIdRoute: typeof RoomsRoomIdRoute
  RoomsIndexRoute: typeof RoomsIndexRoute
}

const RoomsRouteChildren: RoomsRouteChildren = {
  RoomsRoomIdRoute: RoomsRoomIdRoute,
  RoomsIndexRoute: RoomsIndexRoute,
}

const RoomsRouteWithChildren = RoomsRoute._addFileChildren(RoomsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RoomsRoute: RoomsRouteWithChildren,
  ProfileIndexRoute: ProfileIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
