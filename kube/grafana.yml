apiVersion: v1
kind: Namespace
metadata:
  name: observability
  labels:
    name: observability

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: observability
spec:
  selector:
    matchLabels:
      app: postgres-exporter
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
        - name: postgres-exporter
          image: prometheuscommunity/postgres-exporter:latest
          env:
            - name: DATA_SOURCE_NAME
              value: postgres://postgres:postgres@chat-svc-postgres.default.svc.cluster.local:5432/scaled_chat_app?sslmode=disable
          ports:
            - containerPort: 9187
              name: metrics
---

apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: observability
spec:
  selector:
    app: postgres-exporter
  ports:
    - protocol: TCP
      port: 9187
      targetPort: 9187

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  namespace: observability
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: observability
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        scrape_interval: 5s
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'postgres-exporter-namespaceone'
        scrape_interval: 15s
        static_configs:
          - targets: [<db-host>:<db-port>]
      - job_name: 'postgres-exporter-namespacetwo'
        scrape_interval: 15s
        static_configs:
          - targets: [<db-host>:<db-port>]

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: observability
spec:
  selector:
    matchLabels:
      app: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--auto-discover-databases"
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-data
              mountPath: /etc/prometheus
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
      volumes:
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-data
        - name: prometheus-config
          configMap:
            name: prometheus-config

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: observability
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
