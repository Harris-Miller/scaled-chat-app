events {
    worker_connections  4096;  ## Default: 1024
}

http {
    # Docker embedded DNS for service discovery
    # resolver 127.0.0.11 valid=10s ipv6=off;

    upstream backend_http {
        zone backend_http 64k;
        least_conn;
        # server server:3000 resolve;
        server scaled-chat-app-server-1:3000;
        server scaled-chat-app-server-2:3000;
        server scaled-chat-app-server-3:3000;
        server scaled-chat-app-server-4:3000;
    }

    upstream backend_ws {
        zone backend_ws 64k;
        hash $remote_addr consistent;
        # ip_hash;
        # server server:3000 resolve;
        server scaled-chat-app-server-1:3000;
        server scaled-chat-app-server-2:3000;
        server scaled-chat-app-server-3:3000;
        server scaled-chat-app-server-4:3000;
    }

    server {
        listen 80;
        listen [::]:80;

        # WebSocket route
        location /api/ws/ {
            proxy_http_version 1.1;

            proxy_pass http://backend_ws/ws/;

            # Required for WebSockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Keep connections open (avoid idle timeouts)
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        location /api/ {
            proxy_http_version 1.1;

            proxy_pass http://backend_http/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Method $request_method;
            proxy_set_header X-Forwarded-Proto $scheme;


        }

        location / {
            proxy_http_version 1.1;

            proxy_pass http://client:80/;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }
    }
}
